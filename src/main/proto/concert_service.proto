syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.concertticketsystem.proto";
option java_outer_classname = "ConcertServiceProto";

service ConcertService {
    rpc AddConcert (AddConcertRequest) returns (AddConcertResponse);
    rpc UpdateConcert (UpdateConcertRequest) returns (UpdateConcertResponse);
    rpc CancelConcert (CancelConcertRequest) returns (CancelConcertResponse);
    rpc ReserveSeats (ReservationRequest) returns (ReservationResponse);
    rpc UpdateStock (UpdateStockRequest) returns (UpdateStockResponse);
    rpc ListConcerts (ListConcertsRequest) returns (ListConcertsResponse);
}

message AddConcertRequest {
    string concert_id = 1;
    string name = 2;
    string date = 3;
    repeated SeatTier seat_tiers = 4;
    int32 after_party_tickets = 5;
}

message SeatTier {
    string type = 1; // e.g., "Regular", "VIP"
    int32 total_seats = 2;
    double price = 3;
}

message AddConcertResponse {
    string concert_id = 1;
    string message = 2;
}

message UpdateConcertRequest {
    string concert_id = 1;
    string name = 2;
    string date = 3;
    repeated SeatTier seat_tiers = 4;
    int32 after_party_tickets = 5;
}

message UpdateConcertResponse {
    string concert_id = 1;
    string message = 2;
}

message CancelConcertRequest {
    string concert_id = 1;
}

message CancelConcertResponse {
    string concert_id = 1;
    string message = 2;
}

message ReservationRequest {
    string concert_id = 1;
    string user_id = 2;
    repeated SeatReservation seats = 3;
    bool include_after_party = 4;
    int32 after_party_count = 5;
}

message SeatReservation {
    string seat_type = 1;
    int32 count = 2;
}

message ReservationResponse {
    string reservation_id = 1;
    string concert_id = 2;
    string message = 3;
}

message UpdateStockRequest {
    string concert_id = 1;
    repeated SeatTier seat_tiers = 2;
    int32 after_party_tickets = 3;
}

message UpdateStockResponse {
    string concert_id = 1;
    string message = 2;
}

message ListConcertsRequest {}

message ListConcertsResponse {
    repeated Concert concerts = 1;
}

message Concert {
    string concert_id = 1;
    string name = 2;
    string date = 3;
    repeated SeatTier seat_tiers = 4;
    int32 after_party_tickets = 5;
}